{"version":3,"sources":["components/LoadingScreen/LoadingScreen.module.css","reportWebVitals.js","components/Cardlink.js","components/Decklist.js","components/DecklistInput.js","components/CardImage.js","components/DeckView.js","components/Options.js","utils/GetRandomLadderDeck.js","components/RandomLadderDeck.js","pages/View.js","pages/Analyse.js","pages/Credits.js","components/Navigation.js","pages/Build.js","utils/GetCards.js","pages/Stream.js","components/LoadingScreen/LoadingScreen.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Cardlink","draggableId","this","props","index","provided","draggableProps","dragHandleProps","ref","innerRef","Card","className","card","affinity","Body","name","style","display","amount","Button","variant","onClick","amountActions","add","remove","Footer","id","React","Component","Decklist","droppableId","droppableProps","cards","map","item","placeholder","DecklistInput","state","card_input","onHandleChange","bind","onHandleSubmit","e","setState","target","value","preventDefault","addCardAction","rows","onChange","CardImage","href","link","backgroundImage","img","rel","place","backgroundColor","src","alt","width","DeckView","Options","optionActions","clear","Dropdown","Toggle","Menu","Item","exportToText","sortByCost","sortByName","sortByAffinity","a","fetch","json","deck_data","random_deck","multi","Math","floor","random","length","deck_text","getRandomLadderDeck","RandomLadderDeck","deck","ViewPage","Container","Row","Col","xs","reduce","b","AnalysePage","CreditsPage","Navigation","Navbar","bg","expand","Brand","as","Link","to","Collapse","Nav","BuildPage","input","PUBLIC_CARDS","lines","split","i","charAt","card_amount","parseInt","card_id","identifier","substring","endsWith","exec","test","localeCompare","undefined","sensitivity","imgurl","console","log","card_data","externals_suffix","Object","keys","externals","card_link","card_img","findProperty","Text","Properties","Expression","Value","card_cost","isNaN","push","Name","Affinity","cost","parent_node","symbol_name","Symbol","getCards","StreamPage","LoadingScreen","isLoading","premise","styles","loader","hidden","Spinner","animation","role","spinner","App","onDragEnd","result","destination","source","newList","children","splice","moved","loadingAction","clearAction","sortByCostAction","sort","sortByNameAction","numeric","sortByAffinityAction","exportToTextAction","decklist","navigator","clipboard","writeText","addAmountAction","removeAmountAction","loadingScreen","path","element","View","Build","Analyse","Stream","Credits","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a4f6191.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"LoadingScreen_loader__1PuNx\",\"spinner\":\"LoadingScreen_spinner__OPH9S\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {Button, Card} from \"react-bootstrap\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\nclass Cardlink extends React.Component{\r\n    render() {\r\n        return (\r\n            <Draggable draggableId={\"drag_id_\"+this.props.index} index={this.props.index}>\r\n                {(provided)=>(\r\n                    <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                        <Card className={\"bg-collective affinity-\"+this.props.card.affinity}>\r\n                            <Card.Body>\r\n                                <div>{this.props.card.name}</div>\r\n                                <div style={{display:'flex'}}>\r\n                                    <div>{this.props.card.amount}</div>\r\n                                    <Button\r\n                                        variant={\"success\"}\r\n                                        className={\"card-link-btn\"}\r\n                                        onClick={() => this.props.amountActions.add(this.props.index)}\r\n                                    >+</Button>\r\n                                    <Button\r\n                                        variant={\"danger\"}\r\n                                        className={\"card-link-btn\"}\r\n                                        onClick={() => this.props.amountActions.remove(this.props.index)}\r\n                                    >-</Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                            <Card.Footer>{this.props.card.id}</Card.Footer>\r\n                        </Card>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cardlink","import React from \"react\";\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport Cardlink from \"./Cardlink\";\r\n\r\n\r\nclass Decklist extends React.Component{\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Droppable droppableId=\"decklist_drop_id\">\r\n                {(provided)=>(\r\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                        {this.props.cards.map((item, index) => (\r\n                            <Cardlink\r\n                                card={item}\r\n                                index={index}\r\n                                key={index}\r\n                                amountActions={this.props.amountActions}\r\n                            />\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        );\r\n    }\r\n}\r\n\r\n// <Cardlink\r\n//     name={\"funny card\"}\r\n//     link={Math.random()}\r\n//     amount={3}\r\n//     index={this.state.children.length}\r\n//     key={this.state.children.length}\r\n// />\r\n\r\nexport default Decklist","import React from 'react';\r\n\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nclass DecklistInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            card_input: \"\"\r\n        }\r\n\r\n        this.onHandleChange = this.onHandleChange.bind(this);\r\n        this.onHandleSubmit = this.onHandleSubmit.bind(this);\r\n    }\r\n\r\n    onHandleChange(e) {\r\n        this.setState({\r\n            card_input: e.target.value\r\n        });\r\n    }\r\n\r\n    onHandleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.props.addCardAction(this.state.card_input)\r\n\r\n        this.setState({\r\n            card_input: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <textarea\r\n                rows={3}\r\n                placeholder={\"Card links go here...\"}\r\n                value={this.state.card_input}\r\n                onChange={this.onHandleChange}\r\n            />\r\n\r\n                <Button\r\n                    variant={\"secondary\"}\r\n                    onClick={this.onHandleSubmit}\r\n                >\r\n                    Add Card(s)!\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DecklistInput","import React from 'react'\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nclass CardImage extends React.Component{\r\n    render() {\r\n        return (\r\n            <a\r\n                href={this.props.card.link}\r\n                target={'_blank'}\r\n                className={'card-img'}\r\n                style={{backgroundImage: `url(${this.props.card.img})`}} rel=\"noreferrer\"\r\n                data-tip\r\n                data-for={\"card-tooltip-\"+this.props.card.id}\r\n            >\r\n                <p>{this.props.card.name}</p>\r\n\r\n                <ReactTooltip\r\n                    id={\"card-tooltip-\"+this.props.card.id}\r\n                    place={\"bottom\"}\r\n                    backgroundColor={\"none\"}\r\n                    className={\"opaque\"}\r\n                >\r\n                    <img\r\n                        src={this.props.card.link}\r\n                        alt={\"card-tooltip\"}\r\n                        width={\"300px\"}\r\n                    />\r\n                </ReactTooltip>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardImage","import React from 'react'\r\nimport CardImage from \"./CardImage\";\r\n\r\nclass DeckView extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className={\"deckview-container\"}>\r\n                {this.props.cards.map((item, index) => (\r\n\r\n                    <CardImage\r\n                        card={item}\r\n                        key={index}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeckView","import React from 'react'\r\nimport {Button, Dropdown} from \"react-bootstrap\";\r\n\r\nclass Options extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className={\"page-bottom\"}>\r\n                <Button variant={\"secondary\"} onClick={this.props.optionActions.clear}>Clear</Button>\r\n\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        Export As\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item href=\"\" onClick={this.props.optionActions.exportToText}>Text</Dropdown.Item>\r\n                        <Dropdown.Item href=\"\">~~SOON~~ Link ~~SOON~~</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        Sort By\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item href=\"\" onClick={this.props.optionActions.sortByCost}>Cost</Dropdown.Item>\r\n                        <Dropdown.Item href=\"\" onClick={this.props.optionActions.sortByName}>Name</Dropdown.Item>\r\n                        <Dropdown.Item href=\"\" onClick={this.props.optionActions.sortByAffinity}>Affinity</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options","async function getRandomLadderDeck(){\r\n    const deck_data = await (await fetch('https://server.collective.gg/api/public/leaderboards')).json()\r\n    const random_deck = deck_data.multi[Math.floor(Math.random() * deck_data.multi.length)];\r\n    let deck_text = \"\"\r\n    for(let card in random_deck.cards){\r\n        deck_text += random_deck.cards[card] + \" \" + card + \"\\n\"\r\n    }\r\n    return deck_text\r\n}\r\n\r\nexport default getRandomLadderDeck","import {Button} from \"react-bootstrap\";\r\nimport getRandomLadderDeck from \"../utils/GetRandomLadderDeck\";\r\n\r\nfunction RandomLadderDeck(props) {\r\n\r\n\r\n    function load(){\r\n        getRandomLadderDeck().then(deck => props.addCardAction(deck))\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <Button\r\n                    variant={\"secondary\"}\r\n                    onClick={load}\r\n                >\r\n                    See a random deck from Ladder!\r\n                </Button>\r\n                <p className={\"App\"}>OR</p>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default RandomLadderDeck","import React from 'react';\r\n\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Decklist from \"../components/Decklist\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport DecklistInput from \"../components/DecklistInput\";\r\nimport DeckView from \"../components/DeckView\";\r\nimport Options from \"../components/Options\";\r\nimport RandomLadderDeck from \"../components/RandomLadderDeck\";\r\n\r\nclass ViewPage extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"pt-5\">\r\n                <Row>\r\n                    <Col xs={5}>\r\n                        {this.props.cards.length <= 0 &&\r\n                        <RandomLadderDeck\r\n                            addCardAction={this.props.addCardAction}\r\n                        />}\r\n                        <Decklist cards={this.props.cards} amountActions={this.props.amountActions} addCardAction={this.props.addCardAction}/>\r\n                        {this.props.cards.length > 0 && <div>\r\n                            {this.props.cards.reduce((a,b) => a + b.amount, 0)}\r\n                        </div>}\r\n                        <DecklistInput addCardAction={this.props.addCardAction}/>\r\n                        {this.props.cards.length > 0 && <Options optionActions={this.props.optionActions}/>}\r\n                    </Col>\r\n                    <Col>\r\n                        <DeckView cards={this.props.cards}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewPage","import React from 'react';\r\n\r\nclass AnalysePage extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>Under construction...</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnalysePage","import React from 'react';\r\n\r\nclass CreditsPage extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>\r\n                Hi! I'm Sevas. I made this. <br/>\r\n                Thanks to the Collective Community for keeping this game alive, this couldn't be a thing without others to serve. <br/>\r\n                <br/>\r\n                If you really want to show me gratitude ask me out on a date or buy me a coffee.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreditsPage","import React from 'react';\r\n\r\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navigation extends React.Component{\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Container>\r\n                        <Navbar.Brand as={Link} to={\"/collective-deck/\"}>Collective Deck</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"me-auto\">\r\n                                <Nav.Link as={Link} to={\"/collective-deck/\"}>View</Nav.Link>\r\n                                <Nav.Link as={Link} to={\"/collective-deck/build\"}>Build</Nav.Link>\r\n                                <Nav.Link as={Link} to={\"/collective-deck/analyse\"}>Analyse</Nav.Link>\r\n                                <Nav.Link as={Link} to={\"/collective-deck/credits\"}>Credits</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\n\r\nclass BuildPage extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>Under construction...</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildPage","async function getCards(input) {\r\n    const PUBLIC_CARDS = await (await fetch('https://server.collective.gg/api/public-cards/')).json()\r\n\r\n\r\n    const lines = input.split('\\n')\r\n\r\n    let cards = []\r\n\r\n    for (let i=0; i<lines.length; i++){\r\n        if(lines[i].charAt(0) === '#' || lines[i] === '')\r\n            continue\r\n\r\n        let card_amount = parseInt(lines[i].charAt(0))\r\n\r\n        let card_id = ''\r\n\r\n        const identifier = lines[i].substring(2)\r\n        //identifier can be:\r\n        //      - card link\r\n        //      - card id\r\n        //      - card name\r\n\r\n        // case: card link\r\n        if(identifier.endsWith('.png')){\r\n            card_id = /(?<=\\/p\\/cards\\/)(.*?)(?=...png)/.exec(identifier)[0]\r\n        }\r\n        // case: card id\r\n        // ! this also catches when no number is provided in front of a link !\r\n        else if(/([a-z]|[0-9]){8}-([a-z]|[0-9]){4}-([a-z]|[0-9]){4}-([a-z]|[0-9]){4}-([a-z]|[0-9]){12}/.test(identifier)){\r\n            card_id = identifier\r\n        }\r\n\r\n        // case: card name\r\n        else{\r\n            for(const card of PUBLIC_CARDS.cards){\r\n                if(card.name.localeCompare(identifier, undefined, { sensitivity: 'base' }) === 0){\r\n                    card_id = /(?<=\\/p\\/cards\\/)(.*?)(?=...png)/.exec(card.imgurl)[0]\r\n                }\r\n            }\r\n        }\r\n\r\n        if (card_id === '') {\r\n            console.log(\"INPUT ERROR\")\r\n            return []\r\n        }\r\n\r\n        const card_data = await (await fetch('https://server.collective.gg/api/card/'+ card_id)).json()\r\n\r\n        let externals_suffix = \"\";\r\n        if(Object.keys(card_data.externals).length > 0)\r\n            externals_suffix = \"-m\"\r\n        else{\r\n            externals_suffix = \"-s\"\r\n        }\r\n        const card_link = 'https://files.collective.gg/p/cards/' + card_id + externals_suffix + '.png'\r\n\r\n        const card_img = findProperty(card_data.card.Text.Properties, 'PortraitUrl').Expression.Value;\r\n\r\n        const card_cost = findProperty(card_data.card.Text.Properties, 'IGOCost').Expression.Value\r\n\r\n        if (isNaN(card_amount))\r\n            card_amount = 1\r\n\r\n        cards.push({\r\n            id: card_id,\r\n            name: card_data.card.Text.Name,\r\n            link: card_link,\r\n            img: card_img,\r\n            affinity: card_data.card.Text.Affinity,\r\n            cost: card_cost,\r\n            amount: card_amount\r\n        })\r\n    }\r\n\r\n    return cards\r\n}\r\n\r\nfunction findProperty(parent_node, symbol_name){\r\n    // find correct Property index\r\n    for(let i = 0; i < parent_node.length; i++){\r\n        if(parent_node[i].Symbol.Name === symbol_name){\r\n            return parent_node[i];\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport default getCards","import React from 'react';\r\n\r\nclass StreamPage extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>test stream</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StreamPage","import React from 'react'\r\nimport styles from './LoadingScreen.module.css'\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nclass LoadingScreen extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    loadingScreen(premise){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n\r\n        premise.then(() => this.setState({\r\n            isLoading: false\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.loader} hidden={!this.state.isLoading}>\r\n                <Spinner animation=\"border\" role=\"status\" className={styles.spinner}>\r\n                    <span className=\"visually-hidden \">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadingScreen","import './App.css';\n\nimport React from 'react';\n\nimport {Route, Routes} from \"react-router-dom\";\nimport ViewPage from \"./pages/View\";\nimport AnalysePage from \"./pages/Analyse\";\nimport CreditsPage from \"./pages/Credits\";\nimport Navigation from \"./components/Navigation\";\nimport BuildPage from \"./pages/Build\";\nimport {DragDropContext} from \"react-beautiful-dnd\";\nimport getCards from \"./utils/GetCards\";\nimport StreamPage from \"./pages/Stream\";\nimport LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\n\n//https://www.youtube.com/watch?v=Dorf8i6lCuk&ab_channel=Academind\n\nclass App extends React.Component{\n\n    constructor(){\n        super();\n\n        this.state = {\n            children: []\n        }\n    }\n\n    onDragEnd = result => {\n        const {destination, source} = result\n\n        if(!destination){\n            return\n        }\n\n        if(\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return\n        }\n\n        const newList = [...this.state.children]\n        const [moved] = newList.splice(source.index, 1)\n        newList.splice(destination.index,0, moved)\n\n        this.setState({\n            children: newList\n        })\n    }\n\n    addCardAction = (input) => {\n        //const cards = await getCards(input)\n        console.log(input)\n\n        this.loadingAction(\n            getCards(input)\n                .then(cards => {\n                    this.setState({\n                        children: [\n                            ...this.state.children,\n                            ...cards\n                        ]\n                    });\n                })\n        )\n    }\n\n    clearAction = () => {\n        this.setState({\n            children: []\n        })\n    }\n\n    sortByCostAction = () => {\n        let cards = this.state.children\n        cards.sort((a,b) => {\n            return parseInt(a.cost) - parseInt(b.cost)\n        })\n        this.setState({\n            children: cards\n        })\n    }\n\n    sortByNameAction = () => {\n        let cards = this.state.children\n        cards.sort((a,b) => {\n            return a.name.localeCompare(b.name, undefined, { numeric: true })\n        })\n        this.setState({\n            children: cards\n        })\n    }\n\n    sortByAffinityAction = () => {\n        let cards = this.state.children\n        cards.sort((a,b) => {\n            return a.affinity.localeCompare(b.affinity, undefined, { numeric: true })\n        })\n        this.setState({\n            children: cards\n        })\n    }\n\n    exportToTextAction = () => {\n        const cards = this.state.children\n        let decklist = \"\"\n        cards.map((card) => (\n            decklist += card.amount + \" \" + card.link + \"\\n\"\n        ))\n        navigator.clipboard.writeText(decklist)\n        }\n\n    optionActions = {\n        clear: this.clearAction,\n        sortByCost: this.sortByCostAction,\n        sortByName: this.sortByNameAction,\n        sortByAffinity: this.sortByAffinityAction,\n        exportToText: this.exportToTextAction\n    }\n\n    addAmountAction = (index) => {\n        let cards = this.state.children\n        if(cards[index].amount >= 3)\n            return\n        cards[index].amount++\n        this.setState({\n            children: cards\n        })\n    }\n\n    removeAmountAction = (index) => {\n        let cards = this.state.children\n        if(cards[index].amount <= 1) {\n            cards.splice(index, 1)\n        }\n        else {\n            cards[index].amount--\n        }\n        this.setState({\n            children: cards\n        })\n    }\n\n    amountActions = {\n        add: this.addAmountAction,\n        remove: this.removeAmountAction\n    }\n\n    loadingAction = (premise) => {\n        this.LoadingScreen.loadingScreen(premise)\n    }\n\n    render() {\n      return (\n          <div>\n              <Navigation/>\n              <LoadingScreen ref={LoadingScreen => this.LoadingScreen = LoadingScreen}/>\n              <DragDropContext onDragEnd={this.onDragEnd}>\n                  <Routes>\n                      <Route path=\"/collective-deck/\"\n                             element={<ViewPage cards={this.state.children}\n                                                amountActions={this.amountActions}\n                                                optionActions={this.optionActions}\n                                                addCardAction={this.addCardAction}\n                             />}\n                      />\n                      <Route path=\"/collective-deck/build\" element={<BuildPage/>}/>\n                      <Route path=\"/collective-deck/analyse\" element={<AnalysePage/>}/>\n                      <Route path=\"/collective-deck/stream\" element={<StreamPage/>}/>\n                      <Route path=\"/collective-deck/credits\" element={<CreditsPage/>}/>\n                  </Routes>\n              </DragDropContext>\n          </div>\n      );\n  }\n}\n\n// function proTempl() {\n//     return new Promise((resolve, reject) => {\n//         if(true) {\n//             resolve(true);\n//         } else {\n//             reject(false);\n//         }\n//     })\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport './index.css';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}